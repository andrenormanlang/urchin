package views

import (
  "fmt"
  . "github.com/matheusgomes28/urchin/common"
)

templ makeImageDetailsList(image Image) {
  <div class="text-urchin-text flex flex-wrap justify-start mt-4 gap-4">
    <div class="flex items-center">
      <span class="icon-calendar text-xl mr-2 text-urchin-text-muted"></span>
      <span id="modal-text-date" class="transition-opacity duration-200">{ image.Date }</span>
    </div>
    <div class="flex items-center">
      <span class="icon-map-pin text-xl mr-2 text-urchin-text-muted"></span>
      <span id="modal-text-name" class="transition-opacity duration-200">{ image.Location.Name }</span>
    </div>
    <!-- Image counter -->
    <div class="flex items-center ml-auto">
      <span class="icon-image text-xl mr-2 text-urchin-text-muted"></span>
      <span id="modal-counter" class="text-sm text-urchin-text-muted">1 of 1</span>
    </div>
  </div>
}

templ makeModalPaginationButtons(images []Image) {
  <!-- Only show pagination if more than one image -->
  if len(images) > 1 {
    <div class="flex flex-none rounded-xl justify-center mt-6">
      <div class="flex items-center space-x-2">
        <!-- Previous button -->
        <button 
          onclick="prevImage()" 
          aria-label="Previous image"
          class="w-10 h-10 flex items-center justify-center rounded-lg border border-urchin-border hover:text-urchin-text-muted hover:border-urchin-highlight hover:bg-urchin-bg-light transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-urchin-primary">
          <svg width="8" height="15" viewBox="0 0 8 15" class="fill-current stroke-current">
            <path d="M7.12979 1.91389L7.1299 1.914L7.1344 1.90875C7.31476 1.69833 7.31528 1.36878 7.1047 1.15819C7.01062 1.06412 6.86296 1.00488 6.73613 1.00488C6.57736 1.00488 6.4537 1.07206 6.34569 1.18007L6.34564 1.18001L6.34229 1.18358L0.830207 7.06752C0.830152 7.06757 0.830098 7.06763 0.830043 7.06769C0.402311 7.52078 0.406126 8.26524 0.827473 8.73615L0.827439 8.73618L0.829982 8.73889L6.34248 14.6014L6.34243 14.6014L6.34569 14.6047C6.546 14.805 6.88221 14.8491 7.1047 14.6266C7.30447 14.4268 7.34883 14.0918 7.12833 13.8693L1.62078 8.01209C1.55579 7.93114 1.56859 7.82519 1.61408 7.7797L1.61413 7.77975L1.61729 7.77639L7.12979 1.91389Z" stroke-width="0.3"></path>
          </svg>
        </button>

        <!-- Pagination dots container with scrolling for many images -->
        <div class="flex items-center max-w-md overflow-x-auto scrollbar-thin scrollbar-thumb-urchin-border">
          <div class="flex space-x-1 px-2">
            for i, _ := range images {
              <button 
                id={fmt.Sprintf("modal-pagination-%d", i)}
                onclick={ templ.JSFuncCall("showImageModal", i) } 
                aria-label={fmt.Sprintf("Go to image %d", i+1)}
                aria-pressed="false"
                class="min-w-[36px] h-9 rounded-lg border border-urchin-border hover:text-urchin-text-muted hover:border-urchin-highlight hover:bg-urchin-bg-light transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-urchin-primary text-sm font-medium">
                { fmt.Sprintf("%d", i + 1) }
              </button>
            }
          </div>
        </div>

        <!-- Next button -->
        <button 
          onclick="nextImage()" 
          aria-label="Next image"
          class="w-10 h-10 flex items-center justify-center rounded-lg border border-urchin-border hover:text-urchin-text-muted hover:border-urchin-highlight hover:bg-urchin-bg-light transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-urchin-primary">
          <svg width="8" height="15" viewBox="0 0 8 15" class="fill-current stroke-current">
            <path d="M0.870212 13.0861L0.870097 13.086L0.865602 13.0912C0.685237 13.3017 0.684716 13.6312 0.895299 13.8418C0.989374 13.9359 1.13704 13.9951 1.26387 13.9951C1.42264 13.9951 1.5463 13.9279 1.65431 13.8199L1.65436 13.82L1.65771 13.8164L7.16979 7.93248C7.16985 7.93243 7.1699 7.93237 7.16996 7.93231C7.59769 7.47923 7.59387 6.73477 7.17253 6.26385L7.17256 6.26382L7.17002 6.26111L1.65752 0.398611L1.65757 0.398563L1.65431 0.395299C1.454 0.194997 1.11779 0.150934 0.895299 0.373424C0.695526 0.573197 0.651169 0.908167 0.871667 1.13067L6.37922 6.98791C6.4442 7.06886 6.43141 7.17481 6.38592 7.2203L6.38587 7.22025L6.38271 7.22361L0.870212 13.0861Z" stroke-width="0.3"></path>
          </svg>
        </button>
      </div>
    </div>
  }
}


templ makeDefaultModalDialog(images []Image) {
  <!-- Enhanced Modal with better UX -->
  <dialog 
    id="modal" 
    class="p-0 rounded-xl shadow-2xl max-w-5xl w-[90vw] max-h-[90vh] border border-urchin-border bg-urchin-bg-light text-urchin-text backdrop:bg-black backdrop:bg-opacity-50 backdrop:backdrop-blur-sm"
    aria-labelledby="modal-title"
    aria-describedby="modal-excerpt">
    
    <div class="flex flex-col h-full">
      <!-- Header with title and close button -->
      <div class="flex items-center justify-between p-6 pb-4 border-b border-urchin-border">
        <h2 id="modal-title" class="font-bold text-xl text-urchin-text transition-opacity duration-200 truncate flex-1 mr-4">
          Unset Title
        </h2>
        <button 
          onclick="modal.close()" 
          aria-label="Close modal"
          class="flex-shrink-0 w-8 h-8 flex items-center justify-center rounded-lg hover:bg-urchin-bg hover:text-urchin-primary transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-urchin-primary">
          <span class="icon-x text-lg"></span>
        </button>
      </div>
      
      <!-- Image container with loading state -->
      <div class="flex-1 flex items-center justify-center p-6 relative overflow-hidden">
        <!-- Loading spinner -->
        <div 
          id="modal-loading" 
          class="absolute inset-0 flex items-center justify-center bg-urchin-bg-light bg-opacity-75 z-10 hidden">
          <div class="animate-spin rounded-full h-12 w-12 border-b-2 border-urchin-primary"></div>
        </div>
        
        <!-- Main image with better sizing -->
        <img 
          id="modal-image" 
          src="https://loremflickr.com/800/600/girl" 
          alt="Image"
          class="max-w-full max-h-full object-contain rounded-lg shadow-lg transition-opacity duration-200"
          loading="lazy"
        />
      </div>

      <!-- Footer with metadata and excerpt -->
      <div class="p-6 pt-4 border-t border-urchin-border bg-urchin-bg">
        @makeImageDetailsList(Image{})
        
        <p id="modal-excerpt" class="mt-4 text-urchin-text-muted leading-relaxed transition-opacity duration-200">
          Unset Excerpt
        </p>
        
        @makeModalPaginationButtons(images)
        
        <!-- Keyboard shortcuts hint -->
        if len(images) > 1 {
          <div class="mt-4 text-center">
            <p class="text-xs text-urchin-text-muted">
              Use arrow keys, swipe, or spacebar to navigate
            </p>
          </div>
        }
      </div>
    </div>
  </dialog>
}

templ makeImages(images []Image) {
  if len(images) == 0 {
    <div class="block text-center py-12">
      <div class="mb-4">
        <span class="icon-image text-6xl text-urchin-text-muted"></span>
      </div>
      <h3 class="text-urchin-text text-2xl font-bold mb-2">No images uploaded</h3>
      <p class="text-urchin-text-muted">Upload some images to see them here.</p>
    </div>
  } else {
    @makeDefaultModalDialog(images)
  }

  <!-- Enhanced grid with better responsive design -->
  <div class="grid grid-cols-2 gap-4 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 xl:grid-cols-6 2xl:grid-cols-8">
    <script defer>
      window.imagesData = {{ images }};
    </script>

    for i, image := range images {
      <div class="group block border-2 border-urchin-border bg-urchin-bg hover:bg-urchin-bg-light hover:border-urchin-highlight hover:cursor-pointer rounded-lg overflow-hidden transition-all duration-200 hover:shadow-lg hover:scale-[1.02] focus-within:ring-2 focus-within:ring-urchin-primary">
        <!-- Image container with aspect ratio -->
        <div class="aspect-square overflow-hidden">
          <img 
            src={ fmt.Sprintf("images/data/%s", image.Filename) } 
            class="w-full h-full object-cover transition-transform duration-300 group-hover:scale-110"
            srcset={ fmt.Sprintf("/images/data/%s 200w, /images/data/%s 400w, /images/data/%s 600w, /images/data/%s 1200w", image.FilenameSmall, image.FilenameMedium, image.FilenameLarge, image.Filename) }
            sizes="(max-width: 640px) 50vw, (max-width: 768px) 33vw, (max-width: 1024px) 25vw, (max-width: 1280px) 20vw, (max-width: 1536px) 16vw, 12vw"
            onclick={ templ.JSFuncCall("showImageModal", i) }
            alt={ image.Name }
            loading="lazy"
          />
        </div>
        
        <!-- Enhanced image info -->
        <div class="p-3">
          <h3 class="text-urchin-text text-sm font-semibold truncate mb-1 group-hover:text-urchin-primary transition-colors duration-200">
            {image.Name}
          </h3>
          if image.Date != "" {
            <p class="text-xs text-urchin-text-muted truncate">
              {image.Date}
            </p>
          }
          if image.Location.Name != "" {
            <p class="text-xs text-urchin-text-muted truncate">
              <span class="icon-map-pin mr-1"></span>{image.Location.Name}
            </p>
          }
        </div>
      </div>
    }
  </div>
}

templ MakeImagesPage(images []Image, links []Link, dropdowns map[string][]Link) {
  @MakeLayout("Images", links, dropdowns, makeImages(images), []string{"/static/scripts/images.js"})
}